# Distributed under the Boost Software License, Version 1.0.
# See http://www.boost.org/LICENSE_1_0.txt

include(Ryppl)
include(RypplTestSuite)

ryppl_find_and_use_package(BoostAssign)
ryppl_find_and_use_package(BoostRange)
ryppl_find_and_use_package(BoostTest)

if(CMAKE_COMPILER_IS_GNUCXX)
  add_definitions(-Wall -Wunused)
endif(CMAKE_COMPILER_IS_GNUCXX)

ryppl_test_suite(
  COMPILE 
    ../doc/reference/adaptors/examples/adjacent_filtered.cpp
    ../doc/reference/adaptors/examples/copied.cpp
    ../doc/reference/adaptors/examples/filtered.cpp
    ../doc/reference/adaptors/examples/indexed.cpp
    ../doc/reference/adaptors/examples/indirected.cpp
    ../doc/reference/adaptors/examples/map_keys.cpp
    ../doc/reference/adaptors/examples/map_values.cpp
    ../doc/reference/adaptors/examples/replaced.cpp
    ../doc/reference/adaptors/examples/replaced_if.cpp
    ../doc/reference/adaptors/examples/reversed.cpp
    ../doc/reference/adaptors/examples/sliced.cpp
    ../doc/reference/adaptors/examples/strided.cpp
    ../doc/reference/adaptors/examples/tokenized.cpp
    ../doc/reference/adaptors/examples/transformed.cpp
    ../doc/reference/adaptors/examples/uniqued.cpp
  COMPILE_FAIL
    compile_fail/iterator_range1.cpp
  RUN
    adaptor_test/adjacent_filtered.cpp
    adaptor_test/copied.cpp
    adaptor_test/filtered.cpp
    adaptor_test/indexed.cpp
    adaptor_test/indirected.cpp
    adaptor_test/map.cpp
    adaptor_test/replaced.cpp
    adaptor_test/replaced_if.cpp
    adaptor_test/reversed.cpp
    adaptor_test/sliced.cpp
    adaptor_test/strided.cpp
    adaptor_test/strided2.cpp
    adaptor_test/tokenized.cpp
    adaptor_test/transformed.cpp
    adaptor_test/uniqued.cpp
    adaptor_test/adjacent_filtered_example.cpp
    adaptor_test/copied_example.cpp
    adaptor_test/filtered_example.cpp
    adaptor_test/indexed_example.cpp
    adaptor_test/indirected_example.cpp
    adaptor_test/map_keys_example.cpp
    adaptor_test/map_values_example.cpp
    adaptor_test/replaced_example.cpp
    adaptor_test/replaced_if_example.cpp
    adaptor_test/reversed_example.cpp
    adaptor_test/sliced_example.cpp
    adaptor_test/strided_example.cpp
    adaptor_test/transformed_example.cpp
    adaptor_test/type_erased.cpp
    adaptor_test/type_erased_example.cpp
    adaptor_test/uniqued_example.cpp
    algorithm_test/adjacent_find.cpp
    algorithm_test/binary_search.cpp
    algorithm_test/copy.cpp
    algorithm_test/copy_backward.cpp
    algorithm_test/count.cpp
    algorithm_test/count_if.cpp
    algorithm_test/equal.cpp
    algorithm_test/equal_range.cpp
    algorithm_test/fill.cpp
    algorithm_test/find.cpp
    algorithm_test/find_if.cpp
    algorithm_test/find_end.cpp
    algorithm_test/find_first_of.cpp
    algorithm_test/for_each.cpp
    algorithm_test/generate.cpp
    algorithm_test/heap.cpp
    algorithm_test/includes.cpp
    algorithm_test/inplace_merge.cpp
    algorithm_test/lexicographical_compare.cpp
    algorithm_test/lower_bound.cpp
    algorithm_test/max_element.cpp
    algorithm_test/merge.cpp
    algorithm_test/min_element.cpp
    algorithm_test/mismatch.cpp
    algorithm_test/next_permutation.cpp
    algorithm_test/nth_element.cpp
    algorithm_test/partial_sort.cpp
    algorithm_test/partition.cpp
    algorithm_test/prev_permutation.cpp
    algorithm_test/random_shuffle.cpp
    algorithm_test/remove.cpp
    algorithm_test/remove_copy.cpp
    algorithm_test/remove_copy_if.cpp
    algorithm_test/remove_if.cpp
    algorithm_test/replace.cpp
    algorithm_test/replace_copy.cpp
    algorithm_test/replace_copy_if.cpp
    algorithm_test/replace_if.cpp
    algorithm_test/reverse.cpp
    algorithm_test/reverse_copy.cpp
    algorithm_test/rotate.cpp
    algorithm_test/rotate_copy.cpp
    algorithm_test/search.cpp
    algorithm_test/search_n.cpp
    algorithm_test/set_difference.cpp
    algorithm_test/set_intersection.cpp
    algorithm_test/set_symmetric_difference.cpp
    algorithm_test/set_union.cpp
    algorithm_test/sort.cpp
    algorithm_test/stable_partition.cpp
    algorithm_test/stable_sort.cpp
    algorithm_test/swap_ranges.cpp
    algorithm_test/transform.cpp
    algorithm_test/unique.cpp
    algorithm_test/unique_copy.cpp
    algorithm_test/upper_bound.cpp
    algorithm_ext_test/copy_n.cpp
    algorithm_ext_test/erase.cpp
    algorithm_ext_test/for_each_ext.cpp
    algorithm_ext_test/insert.cpp
    algorithm_ext_test/iota.cpp
    algorithm_ext_test/is_sorted.cpp
    algorithm_ext_test/overwrite.cpp
    algorithm_ext_test/push_back.cpp
    algorithm_ext_test/push_front.cpp
    adl_conformance.cpp
    adl_conformance_no_using.cpp
    algorithm.cpp
    algorithm_example.cpp
    array.cpp
    #	[ range-test atl : <include>$(VC71_ROOT)/atlmfc/include ]
    begin.cpp
    combine.cpp
    compat2.cpp
    compat3.cpp
    const_ranges.cpp
    counting_range.cpp
    end.cpp
    extension_mechanism.cpp
    extension_size.cpp
    has_range_iterator.cpp
    irange.cpp
    istream_range.cpp
    iterator_pair.cpp
    iterator_range.cpp
    #	[ range-test atl : <include>$(VC71_ROOT)/atlmfc/include ]
    # [ range-test mfc : <include>$(VC71_ROOT)/atlmfc/include ]
    join.cpp
    partial_workaround.cpp
    pointer_as_iterator.cpp
    reversible_range.cpp
    std_container.cpp
    string.cpp
    sub_range.cpp
    ticket_5486.cpp
    ticket_5544_terminate_irange.cpp
    ticket_5547.cpp
    ticket_5556_is_sorted_namespace.cpp
  LINK_LIBRARIES
    boost_regex
    boost_unit_test_framework
  NO_SINGLE_TARGET
  )
